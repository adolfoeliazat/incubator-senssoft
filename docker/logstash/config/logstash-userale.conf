input {
	http {
		codec => "json"
		port => 8080
		response_headers => { 
			"Access-Control-Allow-Origin" => "*" 
            "Access-Control-Allow-Headers" => "Origin, X-Requested-With, Content-Type, Accept"
        }
	}
}

## Add your filters / logstash plugins configuration here
filter {
	# mutate {
	# 	remove_field => [ "message", "@version", "@timestamp"]
	# }

	grok {
    	match => [ "useraleVersion", "(?<major_ver>\d+).(?<minor_ver>\d+)(.(?<patch_ver>\d+))?" ]
    	match => [ "toolVersion", "(?<tool_major_ver>\d+).(?<tool_minor_ver>\d+)(.(?<tool_patch_ver>\d+))?" ]
  }

 #    dns {
 #   		add_field => [ "hostname", "%{host}" ]
 #    }

 #    dns {
 #     	resolve => [ "host" ]
 #     	action => [ "replace" ]
 #    }

	# geoip {
 #     	source => "host"
 #     	database => "/usr/share/logstash/GeoIP/GeoIP.dat"
 #     	target => "geoip"
 #  }
}

output {
	# Output data to Elasticsearch instance
	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "userale"
		document_type => "logs"
    user => "elastic"
    password => "changeme"
		manage_template => true
		template_overwrite => true
		template => "/usr/share/logstash/templates/userale.json"
		template_name => "userale"
	}

	# Debug
	# stdout { codec => rubydebug }
}
